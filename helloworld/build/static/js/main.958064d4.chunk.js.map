{"version":3,"sources":["logo.svg","App.js","Hello.js","index.js"],"names":["Test","App","className","src","logo","alt","href","target","rel","element","text","user","firstName","lastName","formatName","buttonElement","style","color","Hello","props","id","name","WelcomeMessage","this","React","Component","users","WelcomeBoard","message","i","length","push","setInterval","Date","toLocaleTimeString","ReactDOM","render","document","getElementById","Clock","state","date","timerID","tick","clearInterval","setState","StrictMode"],"mappings":"mNAAe,G,MAAA,IAA0B,kC,eCGzC,SAASA,IACL,OAAO,4CAGX,SAASC,IACL,OACI,qBAAKC,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACS,8CADT,0BAGA,mBAAGH,UAAU,WAAWI,KAAK,sBAAsBC,OAAO,SAASC,IAAI,sBAAvE,yBAGA,mBAAGN,UAAU,uBAAuBI,KAAK,aAAaE,IAAI,sBAA1D,2C,sCCVhB,IAGMC,EAAU,yCAHH,cAGG,OAQVC,EAAO,yCAfb,SAAoBC,GAChB,OAAOA,EAAKC,UAAY,IAAMD,EAAKE,SAcdC,CANZ,CACTF,UAAW,QACXC,SAAU,UAID,gBAIPE,EAAgB,wBAAQC,MAHV,CAAEC,MAAO,QAGP,uBAGf,SAASC,EAAMC,GAClB,OACI,gCACI,qBAAIC,GAAG,YAAP,wBAA+BD,EAAME,QACpCZ,EACAC,EACAK,K,IAKPO,E,4JACF,WACI,OACI,qBAAKpB,UAAU,iBAAf,SACI,2CAAcqB,KAAKJ,MAAMR,KAAzB,a,GAJaa,IAAMC,WAU7BC,EAAQ,CAAC,OAAQ,UAAW,OAAQ,QAAS,OAGtCC,EAAb,4JACI,WAEI,IADA,IAAIC,EAAU,GACLC,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,IAC9BD,EAAQG,KAAK,cAAC,EAAD,CAAwBpB,KAAMe,EAAMG,IAAfA,IAGtC,OAAO,qBAAK3B,UAAU,eAAf,SAA+B0B,QAP9C,GAAkCJ,IAAMC,WAyBxCO,aANA,WACI,IAAMvB,EAAU,yCAAW,IAAIwB,MAAOC,wBACtCC,IAASC,OAAO3B,EAAS4B,SAASC,eAAe,YAInC,KAMX,IAAMC,EAAb,kDACI,WAAYpB,GAAQ,IAAD,8BACf,cAAMA,IACDqB,MAAQ,CACTC,KAAM,IAAIR,MAHC,EADvB,qDAQI,WAAqB,IAAD,OAChBV,KAAKmB,QAAUV,aAAY,kBAAM,EAAKW,SAAQ,OATtD,kCAYI,WACIC,cAAcrB,KAAKmB,WAb3B,kBAgBI,WACInB,KAAKsB,SAAS,CACVJ,KAAM,IAAIR,SAlBtB,oBAsBI,WACI,OACI,8BACI,gDAAmBV,KAAKiB,MAAMC,KAAKP,8BAzBnD,GAA2BV,IAAMC,WC1EjCU,IAASC,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,EAAD,MAEFT,SAASC,eAAe,SAG1BH,IAASC,OACP,cAAC,EAAD,CAAOf,KAAK,WACZgB,SAASC,eAAe,gBAG1BH,IAASC,OACP,cAACpC,EAAD,IACAqC,SAASC,eAAe,SAG1BH,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,iBAG1BH,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,sB","file":"static/js/main.958064d4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nfunction Test() {\n    return <h3>Test text!</h3>;\n}\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p>\n                    Edit <code>src/App.js</code> and save to reload.\n                </p>\n                <a className=\"App-link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    Learn React\n                </a>\n                <a className=\"Scroll-link App-link\" href=\"#beep-boop\" rel=\"noopener noreferrer\">\n                    Scroll down ðŸ‘‡\n                </a>\n            </header>\n        </div>\n    );\n}\n\nexport { App, Test };\n","import React from \"react\";\r\nimport \"./Hello.css\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nfunction formatName(user) {\r\n    return user.firstName + \" \" + user.lastName;\r\n}\r\n\r\nconst name = \"James Moles\";\r\n\r\n// React element that represents DOM tags\r\nconst element = <h1>Hello, {name}!</h1>;\r\n\r\nconst user = {\r\n    firstName: \"James\",\r\n    lastName: \"Moles\",\r\n};\r\n\r\n// React element that represents DOM tags\r\nconst text = <h1>Hello, {formatName(user)}, goodbye!</h1>;\r\nconst buttonStyle = { color: \"blue\" };\r\n\r\n// const divElement = <div tabIntex=\"0\"></div>\r\nconst buttonElement = <button style={buttonStyle}>Click me!</button>;\r\n\r\n// Function Component, user defined element (component) contains JSX attributes and children passed to it through props\r\nexport function Hello(props) {\r\n    return (\r\n        <div>\r\n            <h1 id=\"beep-boop\">Beep Boop, {props.name}</h1>\r\n            {element}\r\n            {text}\r\n            {buttonElement}\r\n        </div>\r\n    );\r\n}\r\n\r\nclass WelcomeMessage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"WelcomeMessage\">\r\n                <h2>Welcome, {this.props.user}!</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst users = [\"Josh\", \"Patrick\", \"Sean\", \"Alice\", \"Bob\"];\r\n\r\n// Class Component\r\nexport class WelcomeBoard extends React.Component {\r\n    render() {\r\n        let message = [];\r\n        for (let i = 0; i < users.length; i++) {\r\n            message.push(<WelcomeMessage key={i} user={users[i]} />);\r\n        }\r\n\r\n        return <div className=\"WelcomeBoard\">{message}</div>;\r\n    }\r\n}\r\n\r\n/**\r\n * Notes:\r\n *\r\n * - React Components must start with a capital letter\r\n * - Components should Never modify thier own props\r\n *\r\n */\r\n\r\nfunction tick() {\r\n    const element = <h1>Time: {new Date().toLocaleTimeString()}</h1>;\r\n    ReactDOM.render(element, document.getElementById(\"clock\"));\r\n}\r\n\r\n// Javascript function that calls tick() every 1000ms = 1 second\r\nsetInterval(tick, 1000);\r\n// Only the time is being updated instead of the whole <h1></h1> and text\r\n\r\n// ^^ This is a poor way to perform updates to the\r\n\r\n// Clock component, using state to hold time, and the a timer is setup with componentDidMount() when the component is added to the DOM tree\r\nexport class Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date(),\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(() => this.tick(), 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    tick() {\r\n        this.setState({\r\n            date: new Date(),\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Clock - time: {this.state.date.toLocaleTimeString()}</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App, Test } from './App';\nimport { Hello, WelcomeBoard, Clock } from './Hello';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nReactDOM.render(\n  <Hello name='Trance' />,\n  document.getElementById('hello-world')\n);\n\nReactDOM.render(\n  <Test />,\n  document.getElementById('test')\n);\n\nReactDOM.render(\n  <WelcomeBoard />,\n  document.getElementById('welcomeboard')\n);\n\nReactDOM.render(\n  <Clock />,\n  document.getElementById('clock-component')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}